{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anderson\\\\Desktop\\\\Aslab\\\\TPA_Desktop\\\\stuckinthemovie\\\\src\\\\store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nconst calculateRemainingTime = expirationTime => {\n  //get time in mili second with new date\n  const currentTime = new Date().getTime();\n  const adjustedExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjustedExpirationTime - currentTime;\n  return remainingDuration;\n};\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n  if (remainingTime <= 3600) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\nexport const AuthContextProvider = props => {\n  _s();\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n    console.log(tokenData);\n  }\n  const [token, setToken] = useState(initialToken);\n\n  // if token is empty return false else true\n  const userIsLoggedIn = !!token;\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  //set timer kalau ada\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"w4PGjzwU+znkNWWv/cmJxDZqQPE=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useEffect","useState","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjustedExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","console","log","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","contextValue","children"],"sources":["C:/Users/Anderson/Desktop/Aslab/TPA_Desktop/stuckinthemovie/src/store/auth-context.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  //get time in mili second with new date\r\n  const currentTime = new Date().getTime();\r\n  const adjustedExpirationTime = new Date(expirationTime).getTime();\r\n\r\n  const remainingDuration = adjustedExpirationTime - currentTime;\r\n\r\n  return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n\r\n  if (remainingTime <= 3600) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n    console.log(tokenData);\r\n  }\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  // if token is empty return false else true\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  };\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  //set timer kalau ada\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      console.log(tokenData.duration);\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}